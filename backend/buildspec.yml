version: 0.2

env:
  variables:
    ECR_REPO_NAME: 835405530238.dkr.ecr.us-east-1.amazonaws.com/my-outfit-backend    # <-- set your ECR repo name

phases:
  pre_build:
    commands:
      - echo "Logging in to ECR..."
      - ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
      - REGION=${AWS_REGION:-us-east-1}
      - echo "Account: $ACCOUNT_ID  Region: $REGION"
      - aws ecr get-login-password --region $REGION | docker login --username AWS --password-stdin ${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com
      - IMAGE_URI=${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/${ECR_REPO_NAME}
      - IMAGE_TAG=${CODEBUILD_RESOLVED_SOURCE_VERSION:0:7}
  build:
    commands:
      - echo "Building backend image..."
      - IMAGE_URI=${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/my-outfit
      - IMAGE_TAG=${CODEBUILD_RESOLVED_SOURCE_VERSION:0:7}
      - docker build -t $IMAGE_URI:$IMAGE_TAG -f backend/Dockerfile backend
  post_build:
    commands:
      - echo "Pushing image to ECR..."
      - docker push $IMAGE_URI:$IMAGE_TAG
      - echo "Creating Dockerrun.aws.json..."
      - |
        cat > Dockerrun.aws.json <<JSON
        {
          "AWSEBDockerrunVersion": 1,
          "Image": { "Name": "${IMAGE_URI}:${IMAGE_TAG}", "Update": "true" },
          "Ports": [ { "ContainerPort": "8000" } ]
        }
        JSON

artifacts:
  files:
    - Dockerrun.aws.json
  discard-paths: yes